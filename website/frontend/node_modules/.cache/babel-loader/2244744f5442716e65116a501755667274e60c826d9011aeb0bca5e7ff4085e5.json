{"ast":null,"code":"var _jsxFileName = \"D:\\\\study affairs\\\\syllabus\\\\4th year\\\\GP\\\\Revelio\\\\website\\\\frontend\\\\src\\\\components\\\\drag_drop.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport '../styles/Drag_Drop.css';\nimport config from '../config';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DragAndDrop = _ref => {\n  _s();\n  let {\n    activateWindow\n  } = _ref;\n  const [isDraged, setDraged] = useState(false);\n  const dragDropContainer = useRef(null);\n  const dragDropArea = useRef(null);\n  const fileButton = useRef(null);\n  useEffect(() => {\n    dragDropArea.current.addEventListener('dragover', fileDragedOver);\n    dragDropArea.current.addEventListener('dragleave', fileDragedReleased);\n    dragDropArea.current.addEventListener('drop', fileDroped);\n    fileButton.current.addEventListener('change', fileChosen);\n  }, []);\n  const fileDragedOver = event => {\n    event.preventDefault();\n    setDraged(true);\n    dragDropContainer.current.classList.add('drag_over');\n  };\n  const fileDragedReleased = () => {\n    setDraged(false);\n    dragDropContainer.current.classList.remove('drag_over');\n  };\n  const fileDroped = event => {\n    event.preventDefault();\n    const file = event.dataTransfer.files[0];\n    readFileURL(file, data => uploadFile(data));\n  };\n  const fileChosen = event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    readFileURL(file, data => uploadFile(data));\n  };\n  const readFileURL = (file, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      callback(fileReader.result);\n    };\n    fileReader.readAsArrayBuffer(file);\n  };\n  const uploadFile = async fileArrayBuffer => {\n    const fileSize = fileArrayBuffer.byteLength;\n    const CHUNK_SIZE = 1024;\n    const chunkCount = Math.ceil(fileSize / CHUNK_SIZE);\n    for (let chunkNum = 0; chunkNum < chunkCount; chunkNum++) {\n      const startIdx = chunkNum * CHUNK_SIZE;\n      const endIdx = startIdx + CHUNK_SIZE;\n      const currentChunk = fileArrayBuffer === null || fileArrayBuffer === void 0 ? void 0 : fileArrayBuffer.slice(startIdx, endIdx);\n      try {\n        // send the current chunk into the backend\n        const response = await axios.post(`${config.url}:${config.port}/upload`, currentChunk, {\n          headers: {\n            'Content-Type': 'application/octet-stream'\n          }\n        });\n        console.log(response === null || response === void 0 ? void 0 : response.data);\n        // if success call on progress callback function\n        const progress = Math.round((chunkNum + 1) * 100 / chunkCount, 0);\n        // onProgressCallback(progress)\n        console.log(progress);\n      } catch (err) {}\n    }\n    // await analyzeData()\n  };\n\n  const analyzeData = async () => {\n    try {\n      // send the current chunk into the backend\n      const response = await axios.get(`${config.url}:${config.port}/analyze`);\n      console.log(response === null || response === void 0 ? void 0 : response.data);\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup_window\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dragdrop_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dragdrop_inner_container\",\n        ref: dragDropContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close_btn_container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close_btn\",\n            onClick: () => activateWindow === null || activateWindow === void 0 ? void 0 : activateWindow.setPopupActive(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dragdrop\",\n          ref: dragDropArea,\n          children: isDraged ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Release the file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"DRAG & DROP \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this), \"OR\", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload_video\",\n              children: \" UPLOAD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"upload_video\",\n              type: \"file\",\n              ref: fileButton,\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(DragAndDrop, \"meHd1kh+VpoPQMYEe7mUy2uXfC8=\");\n_c = DragAndDrop;\nexport default DragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"names":["useEffect","useRef","useState","config","axios","jsxDEV","_jsxDEV","DragAndDrop","_ref","_s","activateWindow","isDraged","setDraged","dragDropContainer","dragDropArea","fileButton","current","addEventListener","fileDragedOver","fileDragedReleased","fileDroped","fileChosen","event","preventDefault","classList","add","remove","file","dataTransfer","files","readFileURL","data","uploadFile","target","callback","fileReader","FileReader","onload","result","readAsArrayBuffer","fileArrayBuffer","fileSize","byteLength","CHUNK_SIZE","chunkCount","Math","ceil","chunkNum","startIdx","endIdx","currentChunk","slice","response","post","url","port","headers","console","log","progress","round","err","analyzeData","get","className","children","ref","onClick","setPopupActive","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","hidden","_c","$RefreshReg$"],"sources":["D:/study affairs/syllabus/4th year/GP/Revelio/website/frontend/src/components/drag_drop.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport '../styles/Drag_Drop.css'\r\nimport config from '../config'\r\nimport axios from 'axios'\r\n\r\nconst DragAndDrop = ({activateWindow}) => {\r\n    const [isDraged, setDraged] = useState(false)\r\n    const dragDropContainer = useRef(null)\r\n    const dragDropArea = useRef(null)\r\n    const fileButton = useRef(null)\r\n\r\n    useEffect(() => {\r\n        dragDropArea.current.addEventListener('dragover', fileDragedOver)\r\n        dragDropArea.current.addEventListener('dragleave', fileDragedReleased)\r\n        dragDropArea.current.addEventListener('drop', fileDroped)\r\n        fileButton.current.addEventListener('change', fileChosen)\r\n    }, [])\r\n\r\n    const fileDragedOver = (event) => {\r\n        event.preventDefault()\r\n        setDraged(true)\r\n        dragDropContainer.current.classList.add('drag_over')\r\n    }\r\n\r\n    const fileDragedReleased = () => {\r\n        setDraged(false)\r\n        dragDropContainer.current.classList.remove('drag_over')\r\n        }\r\n\r\n    const fileDroped = (event) => {\r\n        event.preventDefault()\r\n        const file = event.dataTransfer.files[0]\r\n        readFileURL(file, (data) => uploadFile(data))\r\n    }\r\n\r\n    const fileChosen = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        readFileURL(file, (data) => uploadFile(data))\r\n    }\r\n\r\n    const readFileURL = (file, callback) => {\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            callback(fileReader.result)\r\n        }\r\n        fileReader.readAsArrayBuffer(file)\r\n    }\r\n\r\n    const uploadFile = async (fileArrayBuffer) => {\r\n        const fileSize = fileArrayBuffer.byteLength\r\n        const CHUNK_SIZE = 1024\r\n        const chunkCount = Math.ceil(fileSize / CHUNK_SIZE)\r\n\r\n        for(let chunkNum = 0; chunkNum < chunkCount; chunkNum++) {\r\n            const startIdx = chunkNum * CHUNK_SIZE\r\n            const endIdx = startIdx + CHUNK_SIZE\r\n            const currentChunk = fileArrayBuffer?.slice(startIdx, endIdx)\r\n\r\n            try {\r\n                // send the current chunk into the backend\r\n                const response = await axios.post(`${config.url}:${config.port}/upload`, \r\n                currentChunk,\r\n                {\r\n                    headers: {'Content-Type': 'application/octet-stream'}\r\n                })\r\n                \r\n                console.log(response?.data)\r\n                // if success call on progress callback function\r\n                const progress = Math.round((chunkNum + 1) * 100 / chunkCount, 0)\r\n                // onProgressCallback(progress)\r\n                console.log(progress);\r\n\r\n            } catch (err) {\r\n\r\n            }\r\n        }\r\n        // await analyzeData()\r\n    }\r\n\r\n    const analyzeData = async () => {\r\n        try {\r\n            // send the current chunk into the backend\r\n            const response = await axios.get(`${config.url}:${config.port}/analyze`)\r\n            \r\n            console.log(response?.data)\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup_window\">\r\n            <div className=\"dragdrop_container\">\r\n                <div className='dragdrop_inner_container'\r\n                ref={dragDropContainer}>\r\n                    <div className=\"close_btn_container\">\r\n                        <button className=\"close_btn\" onClick={() => activateWindow?.setPopupActive(false)}></button>\r\n                    </div>\r\n                    <div className=\"dragdrop\" ref={dragDropArea}>\r\n                        {isDraged ? (<p>Release the file</p>) : \r\n                        (<p>DRAG & DROP <br/>OR \r\n                            <label htmlFor='upload_video'> UPLOAD</label>\r\n                            <input id='upload_video' type='file' ref={fileButton} hidden/>\r\n                        </p>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default DragAndDrop"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}